{"ast":null,"code":"var _jsxFileName = \"/Users/eveii/Documents/*halljo/streams/masterproject/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId()); //gets user's Google ID\n      } else {\n        this.props.signOut();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      //initializes the GAPI library\n      window.gapi.client.init({\n        clientId: '115338322854-eoigb44778dcuhdsjsgn0q2s0cbd7pfu.apps.googleusercontent.com',\n        scope: 'email' //defines the scope of what you're requesting from the user\n\n      }).then(() => {\n        //only invoked once the GAPI library is initialized\n        this.auth = window.gapi.auth2.getAuthInstance(); //just a reference to the auth object\n\n        this.onAuthChange(this.auth.isSignedIn.get()); //gets auth status\n\n        this.auth.isSignedIn.listen(this.onAuthChange); //listens for changes to auth status\n      });\n    });\n  }\n\n  authButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"nav-login\",\n        onClick: this.auth.signOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      }, \"logout\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"nav-login\",\n        onClick: this.auth.signIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"login\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, this.authButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/eveii/Documents/*halljo/streams/masterproject/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","authButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAerCC,YAfqC,GAerBC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EADY,CAC4C;AAC3D,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWL,OAAX;AACH;AACJ,KArBoC;AAAA;;AAErCU,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AAAE;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE,OAFa,CAEL;;AAFK,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AAAE;AACZ,aAAKZ,IAAL,GAAYK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ,CADU,CACuC;;AACjD,aAAKjB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB,EAFU,CAEoC;;AAC9C,aAAKF,IAAL,CAAUF,UAAV,CAAqBiB,MAArB,CAA4B,KAAKlB,YAAjC,EAHU,CAGsC;AACnD,OAPD;AAQH,KATD;AAUH;;AAUDmB,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKjB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAC9B,0BAAO;AAAQ,QAAA,SAAS,EAAG,WAApB;AAAgC,QAAA,OAAO,EAAI,KAAKE,IAAL,CAAUN,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,KAFM,MAEA;AACH,0BAAO;AAAQ,QAAA,SAAS,EAAG,WAApB;AAAgC,QAAA,OAAO,EAAI,KAAKM,IAAL,CAAUP,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;AACJ;;AAEDwB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,UAAL,EADL,CADJ;AAKH;;AAvCoC;;AA0CzC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AAAErB,IAAAA,UAAU,EAAEqB,KAAK,CAACnB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => { //initializes the GAPI library\n            window.gapi.client.init({\n                clientId: '115338322854-eoigb44778dcuhdsjsgn0q2s0cbd7pfu.apps.googleusercontent.com',\n                scope: 'email' //defines the scope of what you're requesting from the user\n            }).then(() => { //only invoked once the GAPI library is initialized\n                this.auth = window.gapi.auth2.getAuthInstance(); //just a reference to the auth object\n                this.onAuthChange(this.auth.isSignedIn.get()) //gets auth status\n                this.auth.isSignedIn.listen(this.onAuthChange); //listens for changes to auth status\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId()); //gets user's Google ID\n        } else {\n            this.props.signOut();\n        }\n    };\n\n    authButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return <button className = \"nav-login\" onClick = {this.auth.signOut}>logout</button>;\n        } else {\n            return <button className = \"nav-login\" onClick = {this.auth.signIn}>login</button>;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.authButton()}\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => {\n    return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}